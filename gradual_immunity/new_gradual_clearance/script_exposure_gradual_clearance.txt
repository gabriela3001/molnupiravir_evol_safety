import numpy as np
import matplotlib.pyplot as plt
import time
import pandas as pd
from sklearn.model_selection import ParameterGrid
import pickle
import sys

def merck_euler(population,dt,b,q,m,n,a):
    mutation = 1
    x,y = population
    dy      = np.empty(2)
    dy[0] = x + dt*(b*x*(q**(m)*(q**n))-a*x)
    dy[1] = y + dt*(mutation*(b*x*(q**m)*(1-q**n)+b*y*(q**m)-a*y))
    return(dy)
    
def simulation_gradualclearance(init,b,a0,ainter,a1,q0,q1,m,n,tim,ttr, window = 0):
    
    dt = 1e-4
    initial = [init[0],init[1]]
    population = initial.copy()
    pop_evol = []
    
    current_q = q0
    current_a = a0

    for ngen in np.arange(150/dt):
        if ngen % 10 == 0:
            pop_evol.append(population)
        
        population = merck_euler(population,dt,b,current_q,m,n,current_a)
        
        # immune system kicks in, first time
        if ngen > (tim-window)/dt and ngen < (tim+window)/dt:
            current_a = ainter
        if ngen > (tim+window)/dt:
            current_a = a1
            
        # Merck treatment starts
        if ngen > ttr/dt:
            current_q = q1
            
    pop_evol = np.array(pop_evol)
    return(pop_evol)
    
    
param = int(sys.argv[1])

with open('paramgrid_exposure_gradualclearance.txt', 'rb') as f:
    paramgrid_file = pickle.load(f)
    
paramgrid = paramgrid_file[param]

b = 7.61
q = 1-1e-6
m = paramgrid['m']
a = 3
window = paramgrid['T_window'][1]
tim = paramgrid['T_window'][0]
n = 1
ttr = 0
qd = 1-3e-6

a1values = np.linspace(7.7,10,100)

init_pop = [1,0]

all_results = []

for ap in a1values:
    print(ap)
    ainter = np.mean([a, ap])
    control = simulation_gradualclearance(init_pop,b,a,ainter,ap,q,q,m,n,tim,ttr,window)
    with_treatment = simulation_gradualclearance(init_pop,b,a,ainter,ap,q,qd,m,n,tim,ttr,window)
    Y_control = np.sum(control[:,1])*1e-3
    Y_treatment = np.sum(with_treatment[:,1])*1e-3
    all_results.append({'m':m, 'n':n, 'ap':ap, 'qd':qd, 'ttr':ttr, 'Y_control':Y_control, 'Y_treatment':Y_treatment})
        


output = '/home/labs/pilpel/gabril/COVID_merck/new_gradual_clearance/'
with open(output+'results_colormap_'+str(param)+'.txt', 'wb') as f:
    pickle.dump({'param':int(param), 'results':all_results},f)
